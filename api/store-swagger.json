{
    "swagger": "2.0",
    "info": {
      "description": "Your first API with Amazon API Gateway. This is a sample API that integrates via HTTP with our demo Store endpoints",
      "title": "Store"
    },
    "schemes": [
      "https"
    ],
    "paths": {
      "/": {
        "get": {
          "tags": [
            "products"
          ],
          "description": "Store HTML web page containing API usage information",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "text/html"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "headers": {
                "Content-Type": {
                  "type": "string",
                  "description": "Media type of request"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Content-Type": "'text/html'"
                },
                "responseTemplates": {
                  "text/html": "<html>\n    <head>\n        <style>\n        body {\n            color: #333;\n            font-family: Sans-serif;\n            max-width: 800px;\n            margin: auto;\n        }\n        </style>\n    </head>\n    <body>\n        <h1>Welcome to your Store API</h1>\n        <p>\n            You have successfully deployed your first API. You are seeing this HTML page because the <code>GET</code> method to the root resource of your API returns this content as a Mock integration.\n        </p>\n        <p>\n            The Store API contains the <code>/products</code> and <code>/products/{productId}</code> resources. By making a <a href=\"/$context.stage/products/\" target=\"_blank\"><code>GET</code> request</a> to <code>/products</code> you can retrieve a list of Products in your API. If you are looking for a specific product, for example the product with ID 1, you can make a <a href=\"/$context.stage/products/1\" target=\"_blank\"><code>GET</code> request</a> to <code>/products/1</code>.\n        </p>\n        <p>\n            You can use a REST client such as <a href=\"https://www.getpostman.com/\" target=\"_blank\">Postman</a> to test the <code>POST</code> methods in your API to create a new product. Use the sample body below to send the <code>POST</code> request:\n        </p>\n        <pre>\n{\n    \"type\" : \"coffee mug\",\n    \"price\" : 19.99\n}\n        </pre>\n    </body>\n</html>"
                }
              }
            },
            "passthroughBehavior": "when_no_match",
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "type": "mock"
          }
        }
      },
      "/products": {
        "get": {
          "tags": [
            "products"
          ],
          "summary": "List all products",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "type",
              "in": "query",
              "description": "The type of product to retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number of results to return.",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Products"
              },
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string",
                  "description": "URI that may access the resource"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestParameters": {
              "integration.request.querystring.page": "method.request.querystring.page",
              "integration.request.querystring.type": "method.request.querystring.type"
            },
            "uri": "http://store-demo-endpoint.execute-api.com/store/products",
            "passthroughBehavior": "when_no_match",
            "httpMethod": "GET",
            "type": "http"
          }
        },
        "post": {
          "tags": [
            "products"
          ],
          "operationId": "CreateProduct",
          "summary": "Create a product",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "NewProduct",
              "required": true,
              "schema": {
                "$ref": "#/definitions/NewProduct"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/NewProductResponse"
              },
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string",
                  "description": "URI that may access the resource"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "uri": "http://store-demo-endpoint.execute-api.com/store/products",
            "passthroughBehavior": "when_no_match",
            "httpMethod": "POST",
            "type": "http"
          }
        },
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Empty"
              },
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string",
                  "description": "URI that may access the resource"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string",
                  "description": "Method or methods allowed when accessing the resource"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string",
                  "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "passthroughBehavior": "when_no_match",
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "type": "mock"
          }
        }
      },
      "/products/{productId}": {
        "get": {
          "tags": [
            "product"
          ],
          "summary": "Info for a specific product",
          "operationId": "GetProduct",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "description": "The id of the product to retrieve",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Product"
              },
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string",
                  "description": "URI that may access the resource"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestParameters": {
              "integration.request.path.productId": "method.request.path.productId"
            },
            "uri": "http://store-demo-endpoint.execute-api.com/store/products/{productId}",
            "passthroughBehavior": "when_no_match",
            "httpMethod": "GET",
            "type": "http"
          }
        },
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "description": "The id of the product to retrieve",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Empty"
              },
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string",
                  "description": "URI that may access the resource"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string",
                  "description": "Method or methods allowed when accessing the resource"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string",
                  "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "passthroughBehavior": "when_no_match",
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "type": "mock"
          }
        }
      }
    },
    "definitions": {
      "Products": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Product"
        }
      },
      "Empty": {
        "type": "object"
      },
      "NewProductResponse": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/definitions/Product"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "NewProduct": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/ProductType"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "ProductType": {
        "type": "string",
        "enum": [
          "dog",
          "cat",
          "fish",
          "bird",
          "gecko"
        ]
      }
    },
    "x-amazon-apigateway-documentation": {
      "version": "v2.1",
      "createdDate": "2016-11-17T07:03:59Z",
      "documentationParts": [
        {
          "location": {
            "type": "API"
          },
          "properties": {
            "info": {
              "description": "Your first API with Amazon API Gateway. This is a sample API that integrates via HTTP with our demo Store endpoints"
            }
          }
        },
        {
          "location": {
            "type": "METHOD",
            "method": "GET"
          },
          "properties": {
            "tags": [
              "products"
            ],
            "description": "Store HTML web page containing API usage information"
          }
        },
        {
          "location": {
            "type": "METHOD",
            "path": "/products/{productId}",
            "method": "GET"
          },
          "properties": {
            "tags": [
              "products"
            ],
            "summary": "Info for a specific product"
          }
        },
        {
          "location": {
            "type": "METHOD",
            "path": "/products",
            "method": "GET"
          },
          "properties": {
            "tags": [
              "products"
            ],
            "summary": "List all products"
          }
        },
        {
          "location": {
            "type": "METHOD",
            "path": "/products",
            "method": "POST"
          },
          "properties": {
            "tags": [
              "products"
            ],
            "summary": "Create a product"
          }
        },
        {
          "location": {
            "type": "PATH_PARAMETER",
            "path": "/products/{productId}",
            "method": "*",
            "name": "productId"
          },
          "properties": {
            "description": "The id of the product to retrieve"
          }
        },
        {
          "location": {
            "type": "QUERY_PARAMETER",
            "path": "/products",
            "method": "GET",
            "name": "page"
          },
          "properties": {
            "description": "Page number of results to return."
          }
        },
        {
          "location": {
            "type": "QUERY_PARAMETER",
            "path": "/products",
            "method": "GET",
            "name": "type"
          },
          "properties": {
            "description": "The type of product to retrieve"
          }
        },
        {
          "location": {
            "type": "REQUEST_BODY",
            "path": "/products",
            "method": "POST"
          },
          "properties": {
            "description": "Product object that needs to be added to the store"
          }
        },
        {
          "location": {
            "type": "RESPONSE",
            "method": "*",
            "statusCode": "200"
          },
          "properties": {
            "description": "Successful operation"
          }
        },
        {
          "location": {
            "type": "RESPONSE_HEADER",
            "method": "OPTIONS",
            "statusCode": "200",
            "name": "Access-Control-Allow-Headers"
          },
          "properties": {
            "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
          }
        },
        {
          "location": {
            "type": "RESPONSE_HEADER",
            "method": "OPTIONS",
            "statusCode": "200",
            "name": "Access-Control-Allow-Methods"
          },
          "properties": {
            "description": "Method or methods allowed when accessing the resource"
          }
        },
        {
          "location": {
            "type": "RESPONSE_HEADER",
            "method": "*",
            "statusCode": "200",
            "name": "Access-Control-Allow-Origin"
          },
          "properties": {
            "description": "URI that may access the resource"
          }
        },
        {
          "location": {
            "type": "RESPONSE_HEADER",
            "method": "GET",
            "statusCode": "200",
            "name": "Content-Type"
          },
          "properties": {
            "description": "Media type of request"
          }
        }
      ]
    }
  }
  